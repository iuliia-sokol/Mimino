{"version":3,"file":"static/js/464.42009baa.chunk.js","mappings":"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","sources":["../node_modules/react-map-gl/src/components/use-map.tsx","../node_modules/react-map-gl/src/utils/transform.ts","../node_modules/react-map-gl/src/utils/style-utils.ts","../node_modules/react-map-gl/src/utils/deep-equal.ts","../node_modules/react-map-gl/src/mapbox/mapbox.ts","../node_modules/react-map-gl/src/mapbox/create-ref.ts","../node_modules/react-map-gl/src/utils/use-isomorphic-layout-effect.ts","../node_modules/react-map-gl/src/utils/set-globals.ts","../node_modules/react-map-gl/src/components/map.tsx","../node_modules/react-map-gl/src/utils/apply-react-style.ts","../node_modules/react-map-gl/src/components/marker.ts","../node_modules/react-map-gl/src/components/popup.ts","../node_modules/react-map-gl/src/components/use-control.ts","../node_modules/react-map-gl/src/components/attribution-control.ts","../node_modules/react-map-gl/src/components/fullscreen-control.ts","../node_modules/react-map-gl/src/components/geolocate-control.ts","../node_modules/react-map-gl/src/components/navigation-control.ts","../node_modules/react-map-gl/src/components/scale-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap(): {current?: MapRef; [id: string]: MapRef | undefined} {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent;\n}\n","import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr: Transform): Transform {\n  const newTransform = tr.clone();\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n","import {ImmutableLike, MapboxStyle} from '../types';\n\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\nexport function normalizeStyle(style: string | MapboxStyle | ImmutableLike): string | MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if ('toJS' in style) {\n    style = style.toJS() as MapboxStyle;\n  }\n  if (!style.layers) {\n    return style;\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    // @ts-expect-error\n    const layerRef = layerIndex[layer.ref];\n    let normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = {...layer};\n      // Breaks style diffing :(\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || {...layer};\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n","import type {PointLike} from '../types';\n\n/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n  return ax === bx && ay === by;\n}\n\n/* eslint-disable complexity */\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import {transformToViewState, applyViewStateToTransform, cloneTransform} from '../utils/transform';\nimport {normalizeStyle} from '../utils/style-utils';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  Transform,\n  ProjectionSpecification,\n  ViewState,\n  ViewStateChangeEvent,\n  DragPanOptions,\n  ZoomRotateOptions,\n  TransformRequestFunction,\n  Light,\n  Fog,\n  TerrainSpecification,\n  MapboxStyle,\n  ImmutableLike,\n  LngLatBoundsLike,\n  FitBoundsOptions,\n  MapMouseEvent,\n  MapLayerMouseEvent,\n  MapLayerTouchEvent,\n  MapWheelEvent,\n  MapBoxZoomEvent,\n  MapStyleDataEvent,\n  MapSourceDataEvent,\n  MapboxEvent,\n  ErrorEvent,\n  MapboxGeoJSONFeature,\n  MapboxMap\n} from '../types';\n\nexport type MapboxProps = Partial<ViewState> & {\n  // Init options\n  mapboxAccessToken?: string;\n\n  /** Camera options used when constructing the Map instance */\n  initialViewState?: Partial<ViewState> & {\n    /** The initial bounds of the map. If bounds is specified, it overrides longitude, latitude and zoom options. */\n    bounds?: LngLatBoundsLike;\n    /** A fitBounds options object to use only when setting the bounds option. */\n    fitBoundsOptions?: FitBoundsOptions;\n  };\n\n  /** If provided, render into an external WebGL context */\n  gl?: WebGLRenderingContext;\n\n  /**\n   * If true, the gl context will be created with MSA antialiasing, which can be useful for antialiasing custom layers.\n   * This is false by default as a performance optimization.\n   * @default false\n   */\n  antialias?: boolean;\n  /**\n   * If true, an attribution control will be added to the map.\n   * @default true\n   */\n  attributionControl?: boolean;\n  /**\n   * Snap to north threshold in degrees.\n   * @default 7\n   */\n  bearingSnap?: number;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click for it to be\n   * considered a valid click (as opposed to a mouse drag).\n   * @default 3\n   */\n  clickTolerance?: number;\n  /**\n   * If `true`, Resource Timing API information will be collected for requests made by GeoJSON\n   * and Vector Tile web workers (this information is normally inaccessible from the main\n   * Javascript thread). Information will be returned in a `resourceTiming` property of\n   * relevant `data` events.\n   * @default false\n   */\n  collectResourceTiming?: boolean;\n  /**\n   * If `true` , scroll zoom will require pressing the ctrl or ⌘ key while scrolling to zoom map,\n   * and touch pan will require using two fingers while panning to move the map.\n   * Touch pitch will require three fingers to activate if enabled.\n   */\n  cooperativeGestures?: boolean;\n  /**\n   * If `true`, symbols from multiple sources can collide with each other during collision\n   * detection. If `false`, collision detection is run separately for the symbols in each source.\n   * @default true\n   */\n  crossSourceCollisions?: boolean;\n  /** String or strings to show in an AttributionControl.\n   * Only applicable if options.attributionControl is `true`. */\n  customAttribution?: string | string[];\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label collisions, in milliseconds.\n   * This setting affects all symbol layers. This setting does not affect the duration of runtime\n   * styling transitions or raster tile cross-fading.\n   * @default 300\n   */\n  fadeDuration?: number;\n  /** If true, map creation will fail if the implementation determines that the performance of the created WebGL context would be dramatically lower than expected.\n   * @default false\n   */\n  failIfMajorPerformanceCaveat?: boolean;\n  /** If `true`, the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL.\n   * For example, `http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60`.\n   * An additional string may optionally be provided to indicate a parameter-styled hash,\n   * e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar, where foo\n   * is a custom parameter and bar is an arbitrary hash distinct from the map hash.\n   */\n  hash?: boolean | string;\n  /** If false, no mouse, touch, or keyboard listeners are attached to the map, so it will not respond to input\n   * @default true\n   */\n  interactive?: boolean;\n  /** A patch to apply to the default localization table for UI strings, e.g. control tooltips.\n   * The `locale` object maps namespaced UI string IDs to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported string IDs.\n   * The object may specify all UI strings (thereby adding support for a new translation) or\n   * only a subset of strings (thereby patching the default translation table).\n   */\n  locale?: {[key: string]: string};\n  /**\n   * Overrides the generation of all glyphs and font settings except font-weight keywords\n   * Also overrides localIdeographFontFamily\n   * @default null\n   */\n  localFontFamily?: string;\n  /**\n   * If specified, defines a CSS font-family for locally overriding generation of glyphs in the\n   * 'CJK Unified Ideographs' and 'Hangul Syllables' ranges. In these ranges, font settings from\n   * the map's style will be ignored, except for font-weight keywords (light/regular/medium/bold).\n   * The purpose of this option is to avoid bandwidth-intensive glyph server requests.\n   * @default \"sans-serif\"\n   */\n  localIdeographFontFamily?: string;\n  /**\n   * A string representing the position of the Mapbox wordmark on the map.\n   * @default \"bottom-left\"\n   */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  /**\n   * The maximum number of tiles stored in the tile cache for a given source. If omitted, the\n   * cache will be dynamically sized based on the current viewport.\n   * @default null\n   */\n  maxTileCacheSize?: number;\n  /**\n   * If true, map will prioritize rendering for performance by reordering layers\n   * If false, layers will always be drawn in the specified order\n   * @default true\n   */\n  optimizeForTerrain?: boolean;\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to rotate\" interaction will be disabled.\n   * @default true\n   */\n  pitchWithRotate?: boolean;\n  /** If true, The maps canvas can be exported to a PNG using map.getCanvas().toDataURL();. This is false by default as a performance optimization.\n   * @default false\n   */\n  preserveDrawingBuffer?: boolean;\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they expire per their HTTP\n   * `cacheControl`/`expires` headers.\n   * @default true\n   */\n  refreshExpiredTiles?: boolean;\n  /**\n   * Allows for the usage of the map in automated tests without an accessToken with custom self-hosted test fixtures.\n   * @default null\n   */\n  testMode?: boolean;\n  /**\n   * If  true, the map will automatically resize when the browser window resizes\n   * @default true\n   */\n  trackResize?: boolean;\n  /**\n   * A callback run before the Map makes a request for an external URL. The callback can be\n   * used to modify the url, set headers, or set the credentials property for cross-origin requests.\n   * @default null\n   */\n  transformRequest?: TransformRequestFunction;\n\n  // Handlers\n\n  /**\n   * If true, enable the \"box zoom\" interaction (see BoxZoomHandler)\n   * @default true\n   */\n  boxZoom?: boolean;\n  /**\n   * If true, enable the \"double click to zoom\" interaction (see DoubleClickZoomHandler).\n   * @default true\n   */\n  doubleClickZoom?: boolean;\n  /**\n   * If `true`, the \"drag to pan\" interaction is enabled.\n   * An `Object` value is passed as options to {@link DragPanHandler#enable}.\n   * @default true\n   */\n  dragPan?: boolean | DragPanOptions;\n  /**\n   * If true, enable the \"drag to rotate\" interaction (see DragRotateHandler).\n   * @default true\n   */\n  dragRotate?: boolean;\n  /**\n   * If true, enable keyboard shortcuts (see KeyboardHandler).\n   * @default true\n   */\n  keyboard?: boolean;\n  /**\n   * If `true`, the \"scroll to zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link ScrollZoomHandler#enable}.\n   * @default true\n   */\n  scrollZoom?: boolean | ZoomRotateOptions;\n  /**\n   * If `true`, the \"drag to pitch\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchPitchHandler#enable}.\n   * @default true\n   */\n  touchPitch?: boolean;\n  /**\n   * If `true`, the \"pinch to rotate and zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchZoomRotateHandler#enable}.\n   * @default true\n   */\n  touchZoomRotate?: boolean | ZoomRotateOptions;\n\n  // Constraints\n\n  /** If set, the map is constrained to the given bounds. */\n  maxBounds?: LngLatBoundsLike;\n  /** Maximum pitch of the map. */\n  maxPitch?: number;\n  /** Maximum zoom of the map. */\n  maxZoom?: number;\n  /** Minimum pitch of the map. */\n  minPitch?: number;\n  /** Minimum zoom of the map. */\n  minZoom?: number;\n\n  /** For external controller to override the camera state */\n  viewState?: ViewState & {\n    width: number;\n    height: number;\n  };\n\n  // Styling\n\n  /** Mapbox style */\n  mapStyle?: string | MapboxStyle | ImmutableLike;\n  /** Enable diffing when the map style changes\n   * @default true\n   */\n  styleDiffing?: boolean;\n  /** The fog property of the style. Must conform to the Fog Style Specification .\n   * If `null` is provided, removes the fog from the map. */\n  fog?: Fog | null;\n  /** Light properties of the map. */\n  light?: Light;\n  /** Terrain property of the style. Must conform to the Terrain Style Specification .\n   * If `null` is provided, removes terrain from the map. */\n  terrain?: TerrainSpecification | null;\n  /** Default layers to query on pointer events */\n  interactiveLayerIds?: string[];\n  /** The projection the map should be rendered in\n   * @default \"mercator\"\n   */\n  projection?: ProjectionSpecification | string;\n  /**\n   * If `true`, multiple copies of the world will be rendered, when zoomed out.\n   * @default true\n   */\n  renderWorldCopies?: boolean;\n  /** CSS cursor */\n  cursor?: string;\n\n  // Callbacks\n  onMouseDown?: (e: MapLayerMouseEvent) => void;\n  onMouseUp?: (e: MapLayerMouseEvent) => void;\n  onMouseOver?: (e: MapLayerMouseEvent) => void;\n  onMouseMove?: (e: MapLayerMouseEvent) => void;\n  onClick?: (e: MapLayerMouseEvent) => void;\n  onDblClick?: (e: MapLayerMouseEvent) => void;\n  onMouseEnter?: (e: MapLayerMouseEvent) => void;\n  onMouseLeave?: (e: MapLayerMouseEvent) => void;\n  onMouseOut?: (e: MapLayerMouseEvent) => void;\n  onContextMenu?: (e: MapLayerMouseEvent) => void;\n  onTouchStart?: (e: MapLayerTouchEvent) => void;\n  onTouchEnd?: (e: MapLayerTouchEvent) => void;\n  onTouchMove?: (e: MapLayerTouchEvent) => void;\n  onTouchCancel?: (e: MapLayerTouchEvent) => void;\n\n  onMoveStart?: (e: ViewStateChangeEvent) => void;\n  onMove?: (e: ViewStateChangeEvent) => void;\n  onMoveEnd?: (e: ViewStateChangeEvent) => void;\n  onDragStart?: (e: ViewStateChangeEvent) => void;\n  onDrag?: (e: ViewStateChangeEvent) => void;\n  onDragEnd?: (e: ViewStateChangeEvent) => void;\n  onZoomStart?: (e: ViewStateChangeEvent) => void;\n  onZoom?: (e: ViewStateChangeEvent) => void;\n  onZoomEnd?: (e: ViewStateChangeEvent) => void;\n  onRotateStart?: (e: ViewStateChangeEvent) => void;\n  onRotate?: (e: ViewStateChangeEvent) => void;\n  onRotateEnd?: (e: ViewStateChangeEvent) => void;\n  onPitchStart?: (e: ViewStateChangeEvent) => void;\n  onPitch?: (e: ViewStateChangeEvent) => void;\n  onPitchEnd?: (e: ViewStateChangeEvent) => void;\n\n  onWheel?: (e: MapWheelEvent) => void;\n  onBoxZoomStart?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomEnd?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomCancel?: (e: MapBoxZoomEvent) => void;\n\n  onResize?: (e: MapboxEvent) => void;\n  onLoad?: (e: MapboxEvent) => void;\n  onRender?: (e: MapboxEvent) => void;\n  onIdle?: (e: MapboxEvent) => void;\n  onError?: (e: ErrorEvent) => void;\n  onRemove?: (e: MapboxEvent) => void;\n  onData?: (e: MapStyleDataEvent | MapSourceDataEvent) => void;\n  onStyleData?: (e: MapStyleDataEvent) => void;\n  onSourceData?: (e: MapSourceDataEvent) => void;\n};\n\nconst pointerEvents = {\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseover: 'onMouseOver',\n  mousemove: 'onMouseMove',\n  click: 'onClick',\n  dblclick: 'onDblClick',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mouseout: 'onMouseOut',\n  contextmenu: 'onContextMenu',\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchmove: 'onTouchMove',\n  touchcancel: 'onTouchCancel'\n};\nconst cameraEvents = {\n  movestart: 'onMoveStart',\n  move: 'onMove',\n  moveend: 'onMoveEnd',\n  dragstart: 'onDragStart',\n  drag: 'onDrag',\n  dragend: 'onDragEnd',\n  zoomstart: 'onZoomStart',\n  zoom: 'onZoom',\n  zoomend: 'onZoomEnd',\n  rotatestart: 'onRotateStart',\n  rotate: 'onRotate',\n  rotateend: 'onRotateEnd',\n  pitchstart: 'onPitchStart',\n  pitch: 'onPitch',\n  pitchend: 'onPitchEnd'\n};\nconst otherEvents = {\n  wheel: 'onWheel',\n  boxzoomstart: 'onBoxZoomStart',\n  boxzoomend: 'onBoxZoomEnd',\n  boxzoomcancel: 'onBoxZoomCancel',\n  resize: 'onResize',\n  load: 'onLoad',\n  render: 'onRender',\n  idle: 'onIdle',\n  remove: 'onRemove',\n  data: 'onData',\n  styledata: 'onStyleData',\n  sourcedata: 'onSourceData',\n  error: 'onError'\n};\nconst settingNames: (keyof MapboxProps)[] = [\n  'minZoom',\n  'maxZoom',\n  'minPitch',\n  'maxPitch',\n  'maxBounds',\n  'projection',\n  'renderWorldCopies'\n];\nconst handlerNames: (keyof MapboxProps)[] = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate',\n  'touchPitch'\n];\n\n/**\n * A wrapper for mapbox-gl's Map class\n */\nexport default class Mapbox {\n  private _MapClass: typeof MapboxMap;\n  // mapboxgl.Map instance. Not using type here because we are accessing\n  // private members and methods\n  private _map: any = null;\n  // User-supplied props\n  props: MapboxProps;\n\n  // Mapbox map is stateful.\n  // During method calls/user interactions, map.transform is mutated and\n  // deviate from user-supplied props.\n  // In order to control the map reactively, we shadow the transform\n  // with the one below, which reflects the view state resolved from\n  // both user-supplied props and the underlying state\n  private _renderTransform: Transform;\n\n  // Internal states\n  private _internalUpdate: boolean = false;\n  private _inRender: boolean = false;\n  private _hoveredFeatures: MapboxGeoJSONFeature[] = null;\n  private _deferredEvents: {\n    move: boolean;\n    zoom: boolean;\n    pitch: boolean;\n    rotate: boolean;\n  } = {\n    move: false,\n    zoom: false,\n    pitch: false,\n    rotate: false\n  };\n\n  static savedMaps: Mapbox[] = [];\n\n  constructor(MapClass: typeof MapboxMap, props: MapboxProps, container: HTMLDivElement) {\n    this._MapClass = MapClass;\n    this.props = props;\n    this._initialize(container);\n  }\n\n  get map(): MapboxMap {\n    return this._map as MapboxMap;\n  }\n\n  get transform(): Transform {\n    return this._renderTransform;\n  }\n\n  setProps(props: MapboxProps) {\n    const oldProps = this.props;\n    this.props = props;\n\n    const settingsChanged = this._updateSettings(props, oldProps);\n    if (settingsChanged) {\n      this._createShadowTransform(this._map);\n    }\n    const sizeChanged = this._updateSize(props);\n    const viewStateChanged = this._updateViewState(props, true);\n    this._updateStyle(props, oldProps);\n    this._updateStyleComponents(props, oldProps);\n    this._updateHandlers(props, oldProps);\n\n    // If 1) view state has changed to match props and\n    //    2) the props change is not triggered by map events,\n    // it's driven by an external state change. Redraw immediately\n    if (settingsChanged || sizeChanged || (viewStateChanged && !this._map.isMoving())) {\n      this.redraw();\n    }\n  }\n\n  static reuse(props: MapboxProps, container: HTMLDivElement) {\n    const that = Mapbox.savedMaps.pop();\n    if (!that) {\n      return null;\n    }\n\n    const map = that.map;\n    // When reusing the saved map, we need to reparent the map(canvas) and other child nodes\n    // intoto the new container from the props.\n    // Step1: reparenting child nodes from old container to new container\n    const oldContainer = map.getContainer();\n    container.className = oldContainer.className;\n    while (oldContainer.childNodes.length > 0) {\n      container.appendChild(oldContainer.childNodes[0]);\n    }\n    // Step2: replace the internal container with new container from the react component\n    // @ts-ignore\n    map._container = container;\n\n    // Step 3: apply new props\n    that.setProps({...props, styleDiffing: false});\n    map.resize();\n    const {initialViewState} = props;\n    if (initialViewState) {\n      if (initialViewState.bounds) {\n        map.fitBounds(initialViewState.bounds, {...initialViewState.fitBoundsOptions, duration: 0});\n      } else {\n        that._updateViewState(initialViewState, false);\n      }\n    }\n\n    // Simulate load event\n    if (map.isStyleLoaded()) {\n      map.fire('load');\n    } else {\n      map.once('styledata', () => map.fire('load'));\n    }\n    return that;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  _initialize(container: HTMLDivElement) {\n    const {props} = this;\n    const mapOptions = {\n      ...props,\n      ...props.initialViewState,\n      accessToken: props.mapboxAccessToken || getAccessTokenFromEnv() || null,\n      container,\n      style: normalizeStyle(props.mapStyle)\n    };\n\n    const viewState = mapOptions.initialViewState || mapOptions.viewState || mapOptions;\n    Object.assign(mapOptions, {\n      center: [viewState.longitude || 0, viewState.latitude || 0],\n      zoom: viewState.zoom || 0,\n      pitch: viewState.pitch || 0,\n      bearing: viewState.bearing || 0\n    });\n\n    if (props.gl) {\n      // eslint-disable-next-line\n      const getContext = HTMLCanvasElement.prototype.getContext;\n      // Hijack canvas.getContext to return our own WebGLContext\n      // This will be called inside the mapboxgl.Map constructor\n      // @ts-expect-error\n      HTMLCanvasElement.prototype.getContext = () => {\n        // Unhijack immediately\n        HTMLCanvasElement.prototype.getContext = getContext;\n        return props.gl;\n      };\n    }\n\n    const map: any = new this._MapClass(mapOptions);\n    // Props that are not part of constructor options\n    if (viewState.padding) {\n      map.setPadding(viewState.padding);\n    }\n    if (props.cursor) {\n      map.getCanvas().style.cursor = props.cursor;\n    }\n    this._createShadowTransform(map);\n\n    // Hack\n    // Insert code into map's render cycle\n    const renderMap = map._render;\n    map._render = (arg: number) => {\n      this._inRender = true;\n      renderMap.call(map, arg);\n      this._inRender = false;\n    };\n    const runRenderTaskQueue = map._renderTaskQueue.run;\n    map._renderTaskQueue.run = (arg: number) => {\n      runRenderTaskQueue.call(map._renderTaskQueue, arg);\n      this._onBeforeRepaint();\n    };\n    map.on('render', () => this._onAfterRepaint());\n    // Insert code into map's event pipeline\n    const fireEvent = map.fire;\n    map.fire = this._fireEvent.bind(this, fireEvent);\n\n    // add listeners\n    map.on('resize', () => {\n      this._renderTransform.resize(map.transform.width, map.transform.height);\n    });\n    map.on('styledata', () => this._updateStyleComponents(this.props, {}));\n    map.on('sourcedata', () => this._updateStyleComponents(this.props, {}));\n    for (const eventName in pointerEvents) {\n      map.on(eventName, this._onPointerEvent);\n    }\n    for (const eventName in cameraEvents) {\n      map.on(eventName, this._onCameraEvent);\n    }\n    for (const eventName in otherEvents) {\n      map.on(eventName, this._onEvent);\n    }\n    this._map = map;\n  }\n  /* eslint-enable complexity,max-statements */\n\n  recycle() {\n    // Clean up unnecessary elements before storing for reuse.\n    const container = this.map.getContainer();\n    const children = container.querySelector('[mapboxgl-children]');\n    children?.remove();\n\n    Mapbox.savedMaps.push(this);\n  }\n\n  destroy() {\n    this._map.remove();\n  }\n\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\n  // render cycle, which is managed by Mapbox's animation loop.\n  // This removes the synchronization issue caused by requestAnimationFrame.\n  redraw() {\n    const map = this._map;\n    // map._render will throw error if style does not exist\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\n    //   /src/ui/map.js#L1834\n    if (!this._inRender && map.style) {\n      // cancel the scheduled update\n      if (map._frame) {\n        map._frame.cancel();\n        map._frame = null;\n      }\n      // the order is important - render() may schedule another update\n      map._render();\n    }\n  }\n\n  _createShadowTransform(map: any) {\n    const renderTransform = cloneTransform(map.transform);\n    map.painter.transform = renderTransform;\n\n    this._renderTransform = renderTransform;\n  }\n\n  /* Trigger map resize if size is controlled\n     @param {object} nextProps\n     @returns {bool} true if size has changed\n   */\n  _updateSize(nextProps: MapboxProps): boolean {\n    // Check if size is controlled\n    const {viewState} = nextProps;\n    if (viewState) {\n      const map = this._map;\n      if (viewState.width !== map.transform.width || viewState.height !== map.transform.height) {\n        map.resize();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Adapted from map.jumpTo\n  /* Update camera to match props\n     @param {object} nextProps\n     @param {bool} triggerEvents - should fire camera events\n     @returns {bool} true if anything is changed\n   */\n  _updateViewState(nextProps: MapboxProps, triggerEvents: boolean): boolean {\n    if (this._internalUpdate) {\n      return false;\n    }\n    const map = this._map;\n\n    const tr = this._renderTransform;\n    // Take a snapshot of the transform before mutation\n    const {zoom, pitch, bearing} = tr;\n    const isMoving = map.isMoving();\n\n    if (isMoving) {\n      // All movement of the camera is done relative to the sea level\n      tr.cameraElevationReference = 'sea';\n    }\n    const changed = applyViewStateToTransform(tr, {\n      ...transformToViewState(map.transform),\n      ...nextProps\n    });\n    if (isMoving) {\n      // Reset camera reference\n      tr.cameraElevationReference = 'ground';\n    }\n\n    if (changed && triggerEvents) {\n      const deferredEvents = this._deferredEvents;\n      // Delay DOM control updates to the next render cycle\n      deferredEvents.move = true;\n      deferredEvents.zoom ||= zoom !== tr.zoom;\n      deferredEvents.rotate ||= bearing !== tr.bearing;\n      deferredEvents.pitch ||= pitch !== tr.pitch;\n    }\n\n    // Avoid manipulating the real transform when interaction/animation is ongoing\n    // as it would interfere with Mapbox's handlers\n    if (!isMoving) {\n      applyViewStateToTransform(map.transform, nextProps);\n    }\n\n    return changed;\n  }\n\n  /* Update camera constraints and projection settings to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateSettings(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of settingNames) {\n      if (propName in nextProps && !deepEqual(nextProps[propName], currProps[propName])) {\n        changed = true;\n        map[`set${propName[0].toUpperCase()}${propName.slice(1)}`](nextProps[propName]);\n      }\n    }\n    return changed;\n  }\n\n  /* Update map style to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if style is changed\n   */\n  _updateStyle(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    if (nextProps.cursor !== currProps.cursor) {\n      this._map.getCanvas().style.cursor = nextProps.cursor;\n    }\n    if (nextProps.mapStyle !== currProps.mapStyle) {\n      const options: any = {\n        diff: nextProps.styleDiffing\n      };\n      if ('localIdeographFontFamily' in nextProps) {\n        options.localIdeographFontFamily = nextProps.localIdeographFontFamily;\n      }\n      this._map.setStyle(normalizeStyle(nextProps.mapStyle), options);\n      return true;\n    }\n    return false;\n  }\n\n  /* Update fog, light and terrain to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateStyleComponents(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    if (map.style.loaded()) {\n      if ('light' in nextProps && !deepEqual(nextProps.light, currProps.light)) {\n        changed = true;\n        map.setLight(nextProps.light);\n      }\n      if ('fog' in nextProps && !deepEqual(nextProps.fog, currProps.fog)) {\n        changed = true;\n        map.setFog(nextProps.fog);\n      }\n      if ('terrain' in nextProps && !deepEqual(nextProps.terrain, currProps.terrain)) {\n        if (!nextProps.terrain || map.getSource(nextProps.terrain.source)) {\n          changed = true;\n          map.setTerrain(nextProps.terrain);\n        }\n      }\n    }\n    return changed;\n  }\n\n  /* Update interaction handlers to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateHandlers(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of handlerNames) {\n      const newValue = nextProps[propName];\n      if (!deepEqual(newValue, currProps[propName])) {\n        changed = true;\n        if (newValue) {\n          map[propName].enable(newValue);\n        } else {\n          map[propName].disable();\n        }\n      }\n    }\n    return changed;\n  }\n\n  _onEvent = (e: MapboxEvent) => {\n    // @ts-ignore\n    const cb = this.props[otherEvents[e.type]];\n    if (cb) {\n      cb(e);\n    }\n  };\n\n  _updateHover(e: MapMouseEvent) {\n    const {props} = this;\n    const shouldTrackHoveredFeatures =\n      props.interactiveLayerIds && (props.onMouseMove || props.onMouseEnter || props.onMouseLeave);\n\n    if (shouldTrackHoveredFeatures) {\n      const eventType = e.type;\n      const wasHovering = this._hoveredFeatures?.length > 0;\n      let features;\n      if (eventType === 'mousemove') {\n        try {\n          features = this._map.queryRenderedFeatures(e.point, {\n            layers: props.interactiveLayerIds\n          });\n        } catch {\n          features = [];\n        }\n      } else {\n        features = [];\n      }\n      const isHovering = features.length > 0;\n\n      if (!isHovering && wasHovering) {\n        e.type = 'mouseleave';\n        this._onPointerEvent(e);\n      }\n      this._hoveredFeatures = features;\n      if (isHovering && !wasHovering) {\n        e.type = 'mouseenter';\n        this._onPointerEvent(e);\n      }\n      e.type = eventType;\n    } else {\n      this._hoveredFeatures = null;\n    }\n  }\n\n  _onPointerEvent = (e: MapLayerMouseEvent | MapLayerTouchEvent) => {\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      this._updateHover(e);\n    }\n\n    // @ts-ignore\n    const cb = this.props[pointerEvents[e.type]];\n    if (cb) {\n      if (this.props.interactiveLayerIds && e.type !== 'mouseover' && e.type !== 'mouseout') {\n        const features =\n          this._hoveredFeatures ||\n          this._map.queryRenderedFeatures(e.point, {\n            layers: this.props.interactiveLayerIds\n          });\n        e.features = features;\n      }\n      cb(e);\n      delete e.features;\n    }\n  };\n\n  _onCameraEvent = (e: ViewStateChangeEvent) => {\n    if (!this._internalUpdate) {\n      // @ts-ignore\n      const cb = this.props[cameraEvents[e.type]];\n      if (cb) {\n        cb(e);\n      }\n    }\n    if (e.type in this._deferredEvents) {\n      this._deferredEvents[e.type] = false;\n    }\n  };\n\n  _fireEvent(baseFire: Function, event: string | MapboxEvent, properties?: object) {\n    const map = this._map;\n    const tr = map.transform;\n\n    const eventType = typeof event === 'string' ? event : event.type;\n    if (eventType === 'move') {\n      this._updateViewState(this.props, false);\n    }\n    if (eventType in cameraEvents) {\n      if (typeof event === 'object') {\n        (event as ViewStateChangeEvent).viewState = transformToViewState(tr);\n      }\n      if (this._map.isMoving()) {\n        // Replace map.transform with ours during the callbacks\n        map.transform = this._renderTransform;\n        baseFire.call(map, event, properties);\n        map.transform = tr;\n\n        return map;\n      }\n    }\n    baseFire.call(map, event, properties);\n\n    return map;\n  }\n\n  // All camera manipulations are complete, ready to repaint\n  _onBeforeRepaint() {\n    const map = this._map;\n\n    // If there are camera changes driven by props, invoke camera events so that DOM controls are synced\n    this._internalUpdate = true;\n    for (const eventType in this._deferredEvents) {\n      if (this._deferredEvents[eventType]) {\n        map.fire(eventType);\n      }\n    }\n    this._internalUpdate = false;\n\n    const tr = this._map.transform;\n    // Make sure camera matches the current props\n    this._map.transform = this._renderTransform;\n\n    this._onAfterRepaint = () => {\n      // Restores camera state before render/load events are fired\n      this._map.transform = tr;\n    };\n  }\n\n  _onAfterRepaint: () => void;\n}\n\n/**\n * Access token can be provided via one of:\n *   mapboxAccessToken prop\n *   access_token query parameter\n *   MapboxAccessToken environment variable\n *   REACT_APP_MAPBOX_ACCESS_TOKEN environment variable\n * @returns access token\n */\nfunction getAccessTokenFromEnv(): string {\n  let accessToken = null;\n\n  /* global location, process */\n  if (typeof location !== 'undefined') {\n    const match = /access_token=([^&\\/]*)/.exec(location.search);\n    accessToken = match && match[1];\n  }\n\n  // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\n  try {\n    accessToken = accessToken || process.env.MapboxAccessToken;\n  } catch {\n    // ignore\n  }\n\n  try {\n    accessToken = accessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n  } catch {\n    // ignore\n  }\n\n  return accessToken;\n}\n","import type {MapboxMap, LngLatLike, PointLike, ElevationQueryOptions} from '../types';\nimport type Mapbox from './mapbox';\n\n/** These methods may break the react binding if called directly */\nconst skipMethods = [\n  'setMaxBounds',\n  'setMinZoom',\n  'setMaxZoom',\n  'setMinPitch',\n  'setMaxPitch',\n  'setRenderWorldCopies',\n  'setProjection',\n  'setStyle',\n  'addSource',\n  'removeSource',\n  'addLayer',\n  'removeLayer',\n  'setLayerZoomRange',\n  'setFilter',\n  'setPaintProperty',\n  'setLayoutProperty',\n  'setLight',\n  'setTerrain',\n  'setFog',\n  'remove'\n] as const;\n\nexport type MapRef = {\n  getMap(): MapboxMap;\n} & Omit<MapboxMap, typeof skipMethods[number]>;\n\nexport default function createRef(mapInstance: Mapbox, mapLib: any): MapRef {\n  if (!mapInstance) {\n    return null;\n  }\n\n  const map: MapboxMap = mapInstance.map;\n  const result: any = {\n    getMap: () => map,\n\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: (lnglat: LngLatLike) => {\n      return mapInstance.transform.locationPoint(mapLib.LngLat.convert(lnglat));\n    },\n    unproject: (point: PointLike) => {\n      return mapInstance.transform.pointLocation(mapLib.Point.convert(point));\n    },\n    queryTerrainElevation: (lnglat: LngLatLike, options: ElevationQueryOptions) => {\n      // @ts-ignore transform not defined\n      const tr = map.transform;\n      // @ts-ignore transform not defined\n      map.transform = mapInstance.transform;\n      const result = map.queryTerrainElevation(lnglat, options);\n      // @ts-ignore transform not defined\n      map.transform = tr;\n      return result;\n    }\n  };\n\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n\n  return result;\n}\n\nfunction getMethodNames(obj) {\n  const result = new Set<string>();\n\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (\n        key[0] !== '_' &&\n        typeof obj[key] === 'function' &&\n        key !== 'fire' &&\n        key !== 'setEventedParent'\n      ) {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}\n","// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","export type GlobalSettings = {\n  /** The map's default API URL for requesting tiles, styles, sprites, and glyphs. */\n  baseApiUrl?: string;\n  /** The maximum number of images (raster tiles, sprites, icons) to load in parallel.\n   * @default 16\n   */\n  maxParallelImageRequests?: number;\n  /** The map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.  */\n  RTLTextPlugin?: string;\n  /** Provides an interface for external module bundlers such as Webpack or Rollup to package mapbox-gl's WebWorker into a separate class and integrate it with the library.\nTakes precedence over `workerUrl`. */\n  workerClass?: any;\n  /** The number of web workers instantiated on a page with mapbox-gl maps.\n   * @default 2\n   */\n  workerCount?: number;\n  /** Provides an interface for loading mapbox-gl's WebWorker bundle from a self-hosted URL.\n   * This is useful if your site needs to operate in a strict CSP (Content Security Policy) environment\n   * wherein you are not allowed to load JavaScript code from a Blob URL, which is default behavior. */\n  workerUrl?: string;\n};\n\nconst globalSettings = [\n  'baseApiUrl',\n  'maxParallelImageRequests',\n  'workerClass',\n  'workerCount',\n  'workerUrl'\n] as const;\n\nexport default function setGlobals(mapLib: any, props: GlobalSettings) {\n  for (const key of globalSettings) {\n    if (key in props) {\n      mapLib[key] = props[key];\n    }\n  }\n\n  if (\n    props.RTLTextPlugin &&\n    mapLib.getRTLTextPluginStatus &&\n    mapLib.getRTLTextPluginStatus() === 'unavailable'\n  ) {\n    mapLib.setRTLTextPlugin(\n      props.RTLTextPlugin,\n      (error?: Error) => {\n        if (error) {\n          // eslint-disable-next-line\n          console.error(error);\n        }\n      },\n      false\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  useMemo,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\n\nimport {MountedMapsContext} from './use-map';\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\nimport createRef, {MapRef} from '../mapbox/create-ref';\n\nimport type {CSSProperties} from 'react';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\n\nexport type MapContextValue = {\n  mapLib: any;\n  map: MapRef;\n};\n\nexport const MapContext = React.createContext<MapContextValue>(null);\n\nexport type MapProps = MapboxProps &\n  GlobalSettings & {\n    mapLib?: any;\n    reuseMaps?: boolean;\n    /** Map container id */\n    id?: string;\n    /** Map container CSS style */\n    style?: CSSProperties;\n    children?: any;\n  };\n\nconst defaultProps: MapProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n\n  // Style\n  mapStyle: {version: 8, sources: {}, layers: []},\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n\n  // Callbacks\n  onError: e => console.error(e.error), // eslint-disable-line\n\n  // Globals\n  RTLTextPlugin:\n    'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\n\nconst Map = forwardRef<MapRef, MapProps>((props, ref) => {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState<Mapbox>(null);\n  const containerRef = useRef();\n\n  const {current: contextValue} = useRef<MapContextValue>({mapLib: null, map: null});\n\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox;\n\n    Promise.resolve(mapLib || import('mapbox-gl'))\n      .then(mapboxgl => {\n        if (!isMounted) {\n          return;\n        }\n\n        if (!mapboxgl.Map) {\n          // commonjs style\n          mapboxgl = mapboxgl.default;\n        }\n        if (!mapboxgl || !mapboxgl.Map) {\n          throw new Error('Invalid mapLib');\n        }\n\n        if (mapboxgl.supported(props)) {\n          setGlobals(mapboxgl, props);\n          if (props.reuseMaps) {\n            mapbox = Mapbox.reuse(props, containerRef.current);\n          }\n          if (!mapbox) {\n            mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n          }\n          contextValue.map = createRef(mapbox, mapboxgl);\n          contextValue.mapLib = mapboxgl;\n\n          setMapInstance(mapbox);\n          mountedMapsContext?.onMapMount(contextValue.map, props.id);\n        } else {\n          throw new Error('Map is not supported by this browser');\n        }\n      })\n      .catch(error => {\n        props.onError({\n          type: 'error',\n          target: null,\n          originalEvent: null,\n          error\n        });\n      });\n\n    return () => {\n      isMounted = false;\n      if (mapbox) {\n        mountedMapsContext?.onMapUnmount(props.id);\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n\n  const style: CSSProperties = useMemo(\n    () => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      ...props.style\n    }),\n    [props.style]\n  );\n\n  return (\n    <div id={props.id} ref={containerRef} style={style}>\n      {mapInstance && (\n        <MapContext.Provider value={contextValue}>\n          <div mapboxgl-children=\"\">{props.children}</div>\n        </MapContext.Provider>\n      )}\n    </div>\n  );\n});\n\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\n\nexport default Map;\n","import * as React from 'react';\n// This is a simplified version of\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\n\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\n  if (!element || !styles) {\n    return;\n  }\n  const style = element.style;\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\n      style[key] = `${value}px`;\n    } else {\n      style[key] = value;\n    }\n  }\n}\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {\n  MarkerDragEvent,\n  MapboxPopup,\n  PointLike,\n  Anchor,\n  Alignment,\n  MapboxEvent,\n  MapboxMarker\n} from '../types';\n\nimport {MapContext} from './map';\nimport {arePointsEqual} from '../utils/deep-equal';\n\nexport type MarkerProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /** A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker.setLngLat.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`, and `'bottom-right'`.\n   * @default \"center\"\n   */\n  anchor?: Anchor;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click\n   * (as opposed to a marker drag). The default (0) is to inherit map's clickTolerance.\n   */\n  clickTolerance?: number;\n  /** The color to use for the default marker if options.element is not provided.\n   * @default \"#3FB1CE\"\n   */\n  color?: string;\n  /** A boolean indicating whether or not a marker is able to be dragged to a new position on the map.\n   * @default false\n   */\n  draggable?: boolean;\n  /** The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up. */\n  offset?: PointLike;\n  /** `map` aligns the `Marker` to the plane of the map.\n   * `viewport` aligns the `Marker` to the plane of the viewport.\n   * `auto` automatically matches the value of `rotationAlignment`.\n   * @default \"auto\"\n   */\n  pitchAlignment?: Alignment;\n  /** The rotation angle of the marker in degrees, relative to its `rotationAlignment` setting. A positive value will rotate the marker clockwise.\n   * @default 0\n   */\n  rotation?: number;\n  /** `map` aligns the `Marker`'s rotation relative to the map, maintaining a bearing as the map rotates.\n   * `viewport` aligns the `Marker`'s rotation relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   * @default \"auto\"\n   */\n  rotationAlignment?: Alignment;\n  /** The scale to use for the default marker if options.element is not provided.\n   * The default scale (1) corresponds to a height of `41px` and a width of `27px`.\n   * @default 1\n   */\n  scale?: number;\n  /** A Popup instance that is bound to the marker */\n  popup?: MapboxPopup;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n  onClick?: (e: MapboxEvent<MouseEvent>) => void;\n  onDragStart?: (e: MarkerDragEvent) => void;\n  onDrag?: (e: MarkerDragEvent) => void;\n  onDragEnd?: (e: MarkerDragEvent) => void;\n  children?: React.ReactNode;\n};\n\nconst defaultProps: Partial<MarkerProps> = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n\n/* eslint-disable complexity,max-statements */\nfunction Marker(props: MarkerProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const marker: MapboxMarker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = {\n      ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n\n    const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n\n    mk.getElement().addEventListener('click', (e: MouseEvent) => {\n      thisRef.current.props.onClick?.({\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n\n    mk.on('dragstart', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    mk.on('drag', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    mk.on('dragend', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n\n    return mk;\n  }, []);\n\n  useEffect(() => {\n    marker.addTo(map.getMap());\n\n    return () => {\n      marker.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps;\n\n// @ts-ignore\nexport default React.memo(Marker);\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {PopupEvent, Anchor, PointLike, MapboxPopup} from '../types';\n\nimport {MapContext} from './map';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport type PopupProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /**\n   * A string indicating the part of the popup that should be positioned closest to the coordinate.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`,\n   * and `'bottom-right'`. If unset, the anchor will be dynamically set to ensure the popup falls within the map\n   * container with a preference for `'bottom'`.\n   */\n  anchor?: Anchor;\n  /**\n   * If `true`, a close button will appear in the top right corner of the popup.\n   * @default true\n   */\n  closeButton?: boolean;\n  /**\n   * If `true`, the popup will close when the map is clicked.\n   * @default true\n   */\n  closeOnClick?: boolean;\n  /**\n   * If `true`, the popup will closed when the map moves.\n   * @default false\n   */\n  closeOnMove?: boolean;\n  /**\n   * If `true`, the popup will try to focus the first focusable element inside the popup.\n   * @default true\n   */\n  focusAfterOpen?: boolean;\n  /**\n   * A pixel offset applied to the popup's location specified as:\n   * - a single number specifying a distance from the popup's location\n   * - a PointLike specifying a constant offset\n   * - an object of Points specifing an offset for each anchor position.\n   */\n  offset?: number | PointLike | Partial<{[anchor in Anchor]: PointLike}>;\n  /** Space-separated CSS class names to add to popup container. */\n  className?: string;\n  /**\n   * A string that sets the CSS property of the popup's maximum width (for example, `'300px'`).\n   * To ensure the popup resizes to fit its content, set this property to `'none'`\n   * @default \"240px\"\n   */\n  maxWidth?: string;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  onOpen?: (e: PopupEvent) => void;\n  onClose?: (e: PopupEvent) => void;\n  children?: React.ReactNode;\n};\n\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\nfunction getClassList(className: string) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n\n/* eslint-disable complexity,max-statements */\nfunction Popup(props: PopupProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const popup: MapboxPopup = useMemo(() => {\n    const options = {...props};\n    const pp = new mapLib.Popup(options).setLngLat([props.longitude, props.latitude]);\n    pp.once('open', e => {\n      thisRef.current.props.onOpen?.(e as PopupEvent);\n    });\n    return pp;\n  }, []);\n\n  useEffect(() => {\n    const onClose = e => {\n      thisRef.current.props.onClose?.(e as PopupEvent);\n    };\n    popup.on('close', onClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n\n    return () => {\n      // https://github.com/visgl/react-map-gl/issues/1825\n      // onClose should not be fired if the popup is removed by unmounting\n      // When using React strict mode, the component is mounted twice.\n      // Firing the onClose callback here would be a false signal to remove the component.\n      popup.off('close', onClose);\n      if (popup.isOpen()) {\n        popup.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    }\n    // @ts-ignore\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    }\n    // @ts-ignore\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      // @ts-ignore\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    }\n    // @ts-ignore\n    if (popup.options.className !== props.className) {\n      // @ts-ignore\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      }\n      // @ts-ignore\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n}\n\n// @ts-ignore\nexport default React.memo(Popup);\n","import {useContext, useMemo, useEffect} from 'react';\nimport type {IControl, ControlPosition} from '../types';\nimport {MapContext} from './map';\nimport type {MapContextValue} from './map';\n\ntype ControlOptions = {\n  position?: ControlPosition;\n};\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  opts?: ControlOptions\n);\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n);\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onAdd: (context: MapContextValue) => void,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n);\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  arg1?: ((context: MapContextValue) => void) | ControlOptions,\n  arg2?: ((context: MapContextValue) => void) | ControlOptions,\n  arg3?: ControlOptions\n) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n\n  useEffect(() => {\n    const opts = (arg3 || arg2 || arg1) as ControlOptions;\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n\n    const {map} = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, opts?.position);\n      if (onAdd) {\n        onAdd(context);\n      }\n    }\n\n    return () => {\n      if (onRemove) {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n\n  return ctrl;\n}\n\nexport default useControl;\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl<MapboxAttributionControl>(\n    ({mapLib}) => new mapLib.AttributionControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n","/* global document */\nimport * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxFullscreenControl} from '../types';\n\nexport type FullscreenControlProps = {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl(props: FullscreenControlProps): null {\n  const ctrl = useControl<MapboxFullscreenControl>(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }),\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(FullscreenControl);\n","import * as React from 'react';\nimport {forwardRef, useImperativeHandle, useRef, useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {\n  ControlPosition,\n  PositionOptions,\n  FitBoundsOptions,\n  MapboxGeolocateControl,\n  GeolocateEvent,\n  GeolocateResultEvent,\n  GeolocateErrorEvent\n} from '../types';\n\nexport type GeolocateControlRef = {\n  /** Triggers a geolocate event */\n  trigger: () => boolean;\n};\n\nexport type GeolocateControlProps = {\n  /**\n   * A Geolocation API PositionOptions object.\n   * @default {enableHighAccuracy:false,timeout:6000}\n   */\n  positionOptions?: PositionOptions;\n  /** A Map#fitBounds options object to use when the map is panned and zoomed to the user's location.\n   * @default {maxZoom:15}\n   */\n  fitBoundsOptions?: FitBoundsOptions;\n  /** If true the GeolocateControl becomes a toggle button and when active the map will receive\n   * updates to the user's location as it changes. Default false.\n   * @default false\n   */\n  trackUserLocation?: boolean;\n  /** Draw a transparent circle will be drawn around the user location indicating the accuracy\n   * (95% confidence level) of the user's location. Set to false to disable.\n   * This only has effect if `showUserLocation` is true.\n   * @default true\n   */\n  showAccuracyCircle?: boolean;\n  /**\n   * Show a dot on the map at the user's location. Set to false to disable.\n   * @default true\n   */\n  showUserLocation?: boolean;\n  /** If true an arrow will be drawn next to the user location dot indicating the device's heading.\n   * This only has affect when `trackUserLocation` is true. Default false.\n   * @default false\n   */\n  showUserHeading?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  /** Called on each Geolocation API position update that returned as success. */\n  onGeolocate?: (e: GeolocateResultEvent) => void;\n  /** Called on each Geolocation API position update that returned as an error. */\n  onError?: (e: GeolocateErrorEvent) => void;\n  /** Called on each Geolocation API position update that returned as success but user position\n   * is out of map `maxBounds`. */\n  onOutOfMaxBounds?: (e: GeolocateResultEvent) => void;\n  /** Called when the GeolocateControl changes to the active lock state. */\n  onTrackUserLocationStart?: (e: GeolocateEvent) => void;\n  /** Called when the GeolocateControl changes to the background state. */\n  onTrackUserLocationEnd?: (e: GeolocateEvent) => void;\n};\n\nconst GeolocateControl = forwardRef<GeolocateControlRef, GeolocateControlProps>((props, ref) => {\n  const thisRef = useRef({props});\n\n  const ctrl = useControl<MapboxGeolocateControl>(\n    ({mapLib}) => {\n      const gc = new mapLib.GeolocateControl(props);\n\n      // Hack: fix GeolocateControl reuse\n      // When using React strict mode, the component is mounted twice.\n      // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\n      const setupUI = gc._setupUI;\n      gc._setupUI = args => {\n        if (!gc._container.hasChildNodes()) {\n          setupUI(args);\n        }\n      };\n\n      gc.on('geolocate', e => {\n        thisRef.current.props.onGeolocate?.(e as GeolocateResultEvent);\n      });\n      gc.on('error', e => {\n        thisRef.current.props.onError?.(e as GeolocateErrorEvent);\n      });\n      gc.on('outofmaxbounds', e => {\n        thisRef.current.props.onOutOfMaxBounds?.(e as GeolocateResultEvent);\n      });\n      gc.on('trackuserlocationstart', e => {\n        thisRef.current.props.onTrackUserLocationStart?.(e as GeolocateEvent);\n      });\n      gc.on('trackuserlocationend', e => {\n        thisRef.current.props.onTrackUserLocationEnd?.(e as GeolocateEvent);\n      });\n\n      return gc;\n    },\n    {position: props.position}\n  );\n\n  thisRef.current.props = props;\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      trigger: () => ctrl.trigger()\n    }),\n    []\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n});\n\nGeolocateControl.displayName = 'GeolocateControl';\n\nexport default React.memo(GeolocateControl);\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxNavigationControl} from '../types';\n\nexport type NavigationControlProps = {\n  /** If true the compass button is included.\n   * @default true\n   */\n  showCompass?: boolean;\n  /** If true the zoom-in and zoom-out buttons are included.\n   * @default true\n   */\n  showZoom?: boolean;\n  /** If true the pitch is visualized by rotating X-axis of compass.\n   * @default false\n   */\n  visualizePitch?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction NavigationControl(props: NavigationControlProps): null {\n  const ctrl = useControl<MapboxNavigationControl>(\n    ({mapLib}) => new mapLib.NavigationControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(NavigationControl);\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxScaleControl} from '../types';\n\nexport type ScaleControlProps = {\n  /** Unit of the distance.\n   * @default \"metric\"\n   */\n  unit?: 'imperial' | 'metric' | 'nautical';\n  /** The maximum length of the scale control in pixels.\n   * @default 100\n   */\n  maxWidth?: number;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nconst defaultProps: ScaleControlProps = {\n  unit: 'metric',\n  maxWidth: 100\n};\n\nfunction ScaleControl(props: ScaleControlProps): null {\n  const ctrl = useControl<MapboxScaleControl>(({mapLib}) => new mapLib.ScaleControl(props), {\n    position: props.position\n  });\n\n  // @ts-ignore\n  if (ctrl.options.unit !== props.unit || ctrl.options.maxWidth !== props.maxWidth) {\n    // @ts-ignore\n    ctrl.options.maxWidth = props.maxWidth;\n    // This method will trigger an update\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nScaleControl.defaultProps = defaultProps;\n\nexport default React.memo(ScaleControl);\n"],"names":["MountedMapsContext","React","transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual","refProps","normalizeStyle","style","toJS","layers","layerIndex","layer","id","map","layerRef","ref","normalizedLayer","interactive","propName","deepEqual","a","b","Array","isArray","length","i","aKeys","Object","keys","bKeys","key","hasOwnProperty","pointerEvents","mousedown","mouseup","mouseover","mousemove","click","dblclick","mouseenter","mouseleave","mouseout","contextmenu","touchstart","touchend","touchmove","touchcancel","cameraEvents","movestart","move","moveend","dragstart","drag","dragend","zoomstart","zoomend","rotatestart","rotate","rotateend","pitchstart","pitchend","otherEvents","wheel","boxzoomstart","boxzoomend","boxzoomcancel","resize","load","render","idle","remove","data","styledata","sourcedata","error","settingNames","handlerNames","Mapbox","MapClass","container","e","cb","type","_updateHover","interactiveLayerIds","features","_hoveredFeatures","_map","queryRenderedFeatures","point","_internalUpdate","_deferredEvents","_MapClass","_initialize","_renderTransform","oldProps","settingsChanged","_updateSettings","_createShadowTransform","sizeChanged","_updateSize","viewStateChanged","_updateViewState","_updateStyle","_updateStyleComponents","_updateHandlers","isMoving","redraw","mapOptions","initialViewState","accessToken","mapboxAccessToken","getAccessTokenFromEnv","mapStyle","assign","gl","getContext","HTMLCanvasElement","prototype","setPadding","cursor","getCanvas","renderMap","_render","arg","_inRender","call","runRenderTaskQueue","_renderTaskQueue","run","_onBeforeRepaint","on","_onAfterRepaint","fireEvent","fire","_fireEvent","bind","transform","_onEvent","width","height","eventName","_onPointerEvent","_onCameraEvent","children","getContainer","querySelector","savedMaps","push","_frame","cancel","renderTransform","newTransform","clone","pixelsToGLUnits","cloneTransform","painter","nextProps","triggerEvents","cameraElevationReference","deferredEvents","currProps","toUpperCase","slice","options","diff","styleDiffing","localIdeographFontFamily","setStyle","loaded","light","setLight","fog","setFog","terrain","getSource","source","setTerrain","newValue","enable","disable","shouldTrackHoveredFeatures","onMouseEnter","onMouseLeave","eventType","wasHovering","_a","isHovering","baseFire","event","properties","that","pop","oldContainer","className","childNodes","appendChild","_container","setProps","bounds","fitBounds","fitBoundsOptions","duration","isStyleLoaded","once","location","match","exec","search","process","env","REACT_APP_MAPBOX_ACCESS_TOKEN","skipMethods","createRef","mapInstance","mapLib","result","getMap","getCenter","getZoom","getBearing","getPitch","getPadding","getBounds","project","lnglat","locationPoint","LngLat","convert","unproject","pointLocation","Point","queryTerrainElevation","obj","Set","proto","getOwnPropertyNames","add","f","getPrototypeOf","from","getMethodNames","includes","document","useLayoutEffect","useEffect","globalSettings","MapContext","defaultProps","minZoom","maxZoom","minPitch","maxPitch","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","version","sources","projection","renderWorldCopies","onError","console","RTLTextPlugin","Map","forwardRef","mountedMapsContext","useContext","useState","setMapInstance","containerRef","useRef","contextValue","current","mapbox","isMounted","Promise","resolve","then","mapboxgl","default","Error","supported","getRTLTextPluginStatus","setRTLTextPlugin","setGlobals","reuseMaps","onMapMount","catch","target","originalEvent","onMapUnmount","recycle","destroy","useIsomorphicLayoutEffect","useImperativeHandle","useMemo","position","value","displayName","unitlessNumber","applyReactStyle","element","styles","Number","isFinite","test","Marker","thisRef","marker","hasChildren","el","createElement","mk","setLngLat","getElement","addEventListener","onClick","_b","evt","lngLat","getLngLat","onDragStart","onDrag","onDragEnd","addTo","offset","getOffset","setOffset","ax","x","ay","y","bx","by","arePointsEqual","isDraggable","setDraggable","getRotation","draggable","setRotation","getRotationAlignment","rotation","setRotationAlignment","getPitchAlignment","rotationAlignment","setPitchAlignment","getPopup","pitchAlignment","setPopup","memo","popup","createPortal","getClassList","trim","split","pp","Popup","onOpen","onClose","setDOMContent","off","isOpen","anchor","maxWidth","setMaxWidth","prevClassList","nextClassList","c","has","removeClassName","addClassName","onCreate","arg1","arg2","arg3","context","ctrl","opts","onAdd","onRemove","hasControl","addControl","removeControl","useControl","AttributionControl","FullscreenControl","containerId","getElementById","_controlContainer","GeolocateControl","gc","setupUI","_setupUI","hasChildNodes","args","onGeolocate","onOutOfMaxBounds","onTrackUserLocationStart","onTrackUserLocationEnd","trigger","NavigationControl","ScaleControl","unit","setUnit"],"sourceRoot":""}